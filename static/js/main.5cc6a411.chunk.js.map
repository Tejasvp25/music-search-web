{"version":3,"sources":["components/CustomError.js","utils/network_utils.js","components/MusicCard.js","components/MusicSection.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["NoContentFound","props","className","ServerError","BASE_URL","search_query","a","url","Promise","resolve","reject","Axios","get","then","res","catch","err","MusicCard","state","song_link","undefined","songs","InfoLayout","prop_obj","type","song","album","song_title","title","more_info","primary_artists","singers","music","data-toggle","data-target","id","SongsModal","albumid","tabIndex","role","aria-labelledby","aria-hidden","class","data-dismiss","aria-label","background","map","e","Key","getImageUrl","imageUrl","image","toString","includes","replaceAll","this","getMusicWithData","setState","data","getMusicAlbum","src","alt","href","Component","MusicSection","server_error","index","Result","albums","GetMusicSection","length","getMusicRawSearchResult","query","App","show_result","handleSubmit","preventDefault","document","getElementById","value","trim","toggleDarkMode","$","toggleClass","hasClass","Cookies","set","on","key","trigger","style","verticalAlign","placeholder","onClick","Math","random","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.5cc6a411.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const NoContentFound = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flix justify-content-center\">\r\n        <span className=\"h1\">No Content Found</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ServerError = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flix justify-content-center\">\r\n        <span className=\"h1\">Unexpected error occured</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import Axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://torr-scraper.herokuapp.com/api/\";\r\n\r\nexport async function getMusicRawSearchResult(search_query) {\r\n  let url = `${BASE_URL}jiosaavnraw?search=${search_query}`;\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        return resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        return reject(err);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function getMusicWithData(search_query) {\r\n  let url = `${BASE_URL}jiosaavnsong?search=${search_query}`;\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function getMusicAlbum(search_query) {\r\n  let url = `${BASE_URL}jiosaavnalbum?search=${search_query}`;\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function getMusicPlaylist(search_query) {\r\n  let url = `${BASE_URL}jiosaavnplaylist?search=${search_query}`;\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getMusicWithData, getMusicAlbum } from \"../utils/network_utils\";\r\n\r\nclass MusicCard extends Component {\r\n  state = {\r\n    song_link: undefined,\r\n    songs: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.song !== undefined) {\r\n      getMusicWithData(this.props.song.id).then((res) => {\r\n        this.setState({\r\n          song_link: res.data[\"encrypted_media_url\"],\r\n        });\r\n      });\r\n    } else {\r\n      getMusicAlbum(this.props.album.id).then((res) => {\r\n        this.setState({\r\n          songs: res.data[\"songs\"],\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  InfoLayout = () => {\r\n    const prop_obj =\r\n      this.props.type === \"songs\" ? this.props.song : this.props.album;\r\n    const song_title =\r\n      prop_obj.title === undefined ? prop_obj.song : prop_obj.title;\r\n\r\n    if (this.props.type === \"songs\") {\r\n      return (\r\n        <div className=\"justify-content-center p2\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col justify-content-center pb-2\">\r\n              <span className=\"font-small float-left\">Song Title</span>\r\n              <span className=\"font-weight-bold float-left\"> {song_title}</span>\r\n            </div>\r\n            <div className=\"col justify-content-center pb-2\">\r\n              <span className=\"font-small float-left\">Album</span>\r\n              <span className=\"font-weight-bold float-left\">\r\n                {prop_obj.album}\r\n              </span>\r\n            </div>\r\n            {prop_obj.more_info === undefined ? null : (\r\n              <div className=\"col justify-content-center pb-2\">\r\n                <span className=\"font-small float-left\">Primary Artists</span>\r\n                <span className=\"font-weight-bold float-left\">\r\n                  {prop_obj.more_info.primary_artists}\r\n                </span>\r\n              </div>\r\n            )}\r\n            <div className=\"col justify-content-center pb-2\">\r\n              <span className=\"font-small float-left\">Singers</span>\r\n              <span className=\"font-weight-bold float-left\">\r\n                {prop_obj.more_info === undefined\r\n                  ? prop_obj.singers\r\n                  : prop_obj.more_info.singers}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"justify-content-center p2\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col justify-content-center\">\r\n            <span className=\"font-small float-left\">Album Title</span>\r\n            <span className=\"font-weight-bold float-left\">\r\n              {prop_obj.title === undefined ? \"\" : prop_obj.title}\r\n            </span>\r\n          </div>\r\n          <div className=\"col justify-content-center\">\r\n            <span className=\"font-small float-left\">Music</span>\r\n            <span className=\"font-weight-bold float-left\">\r\n              {prop_obj.music}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.songs === undefined ? null : (\r\n          <div className=\"row justify-content-center mt-2\">\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              data-toggle=\"modal\"\r\n              data-target={`#album${this.props.album.id}`}\r\n            >\r\n              View Songs\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  SongsModal = () => {\r\n    if (this.state.songs !== undefined) {\r\n      const albumid = `album${this.props.album.id}`;\r\n      const title = this.props.album.title;\r\n      return (\r\n        <div\r\n          className=\"modal fade\"\r\n          id={albumid}\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby={`#${albumid}-title`}\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id={`${albumid}-title`}>\r\n                  {title}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\" background={{}}>\r\n                <div className=\"row\"></div>\r\n                {this.state.songs.map((e) => {\r\n                  return (\r\n                    <div className=\"col\">\r\n                      <MusicCard song={e} Key={e.id} type=\"songs\" />\r\n                      <br />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"border-black br-10px elevated-card grey-bg p-2\"\r\n        // style={{\r\n        //   background: \"rgba(0, 0, 0, 0.03)\",\r\n        // }}\r\n      >\r\n        <this.SongsModal />\r\n        <div className=\"row justify-content-center p-3\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6 p-2\">\r\n            <img\r\n              className=\"br-10px img-fluid\"\r\n              src={this.getImageUrl()}\r\n              alt={\r\n                this.props.song === undefined\r\n                  ? this.props.album.title\r\n                  : this.props.song.title\r\n              }\r\n              // style={{\r\n              //   height: \"8em\",\r\n              //   width: \"8em\",\r\n              // }}\r\n            ></img>\r\n          </div>\r\n          <div className=\"col-lg-8 col-sm-6 align-content-start\">\r\n            <this.InfoLayout />\r\n          </div>\r\n          <br />\r\n          {this.state.song_link === undefined ? null : (\r\n            <div className=\"justify-content-center mt-2\">\r\n              <a href={this.state.song_link}>\r\n                <button className=\"btn btn-danger\"> Download Song </button>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getImageUrl = () => {\r\n    const imageUrl =\r\n      this.props.song === undefined\r\n        ? this.props.album.image.toString()\r\n        : this.props.song.image.toString();\r\n    if (imageUrl.includes(\"150\")) {\r\n      return imageUrl.replaceAll(\"150\", \"500\");\r\n    }\r\n    return imageUrl.replaceAll(\"50\", \"500\");\r\n  };\r\n}\r\n\r\nexport default MusicCard;\r\n","import React, { Component } from \"react\";\r\nimport MusicCard from \"./MusicCard\";\r\nimport { NoContentFound, ServerError } from \"./CustomError\";\r\nclass MusicSection extends Component {\r\n  state = {\r\n    data: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data === undefined) {\r\n      return (\r\n        <div className=\"justify-content-center\">\r\n          <br></br>\r\n          <NoContentFound />\r\n        </div>\r\n      );\r\n    } else if (this.state.data === undefined) {\r\n      return (\r\n        <div className=\"justify-content-around\">\r\n          <br></br>\r\n\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border text-dark\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.server_error) {\r\n      return (\r\n        <div className=\"justify-content-around\">\r\n          <ServerError />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"justify-content-around\">\r\n          <div className=\"row pt-3 justify-content-center\">\r\n            {this.state.data.map((e, index) => {\r\n              return (\r\n                <div\r\n                  className=\"col-lg-4 col-md-12 col-sm-12\"\r\n                  Key={`${this.props.type}${index.toString()}`}\r\n                >\r\n                  {this.props.type === \"songs\" ? (\r\n                    <MusicCard\r\n                      song={e}\r\n                      type={this.props.type}\r\n                      // Key={`${this.props.type}${index.toString()}`}\r\n                    />\r\n                  ) : (\r\n                    <MusicCard\r\n                      album={e}\r\n                      type={this.props.type}\r\n                      // Key={`${this.props.type}${index.toString()}`}\r\n                    />\r\n                  )}\r\n\r\n                  <br></br>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MusicSection;\r\n","import React, { Component } from \"react\";\r\nimport { NoContentFound } from \"./components/CustomError\";\r\nimport MusicSection from \"./components/MusicSection\";\r\nimport { getMusicRawSearchResult } from \"./utils/network_utils\";\r\n\r\nclass Result extends Component {\r\n  state = {\r\n    songs: undefined,\r\n    albums: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    getMusicRawSearchResult(this.props.query).then((res) => {\r\n      this.setState({\r\n        songs: res.data[\"songs\"][\"data\"],\r\n        albums: res.data[\"albums\"][\"data\"],\r\n      });\r\n    });\r\n  }\r\n\r\n  GetMusicSection = (props) => {\r\n    if (this.state.songs === undefined) {\r\n      return (\r\n        <div className=\"row justify-content-center p-3\">\r\n          <div class=\"spinner-border text-dark\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (props.type === \"songs\") {\r\n      if (this.state.songs.length === 0) {\r\n        return <NoContentFound />;\r\n      }\r\n    } else {\r\n      if (this.state.albums.length === 0) {\r\n        return <NoContentFound />;\r\n      }\r\n    }\r\n\r\n    return <MusicSection type={props.type} data={props.data} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <h2 className=\"text-secondary\">\r\n          Search Result for \"{this.props.query}\"\r\n        </h2>\r\n        <br></br>\r\n        <span className=\"h1\">Songs</span>\r\n        <div>\r\n          <this.GetMusicSection type=\"songs\" data={this.state.songs} />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <span className=\"h1\">Albums</span>\r\n        <div>\r\n          <this.GetMusicSection type=\"albums\" data={this.state.albums} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\nimport Result from \"./Result\";\nimport \"./App.css\";\nimport $ from \"jquery\";\nimport Cookies from \"js-cookie\";\nclass App extends Component {\n  state = {\n    show_result: false,\n    search_query: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const query = document.getElementById(\"search-input\").value;\n    if (query.trim().length > 0) {\n      this.setState({\n        show_result: true,\n        search_query: query,\n      });\n    }\n  };\n\n  toggleDarkMode = (e) => {\n    $(\"body\").toggleClass(\"body-dark\");\n    $(\"body\").toggleClass(\"body-light\");\n    if ($(\"body\").hasClass(\"body-dark\")) {\n      Cookies.set(\"dark\", 1);\n    } else {\n      Cookies.set(\"dark\", 0);\n    }\n  };\n\n  componentDidMount() {\n    $(\"#search-input\").on(\"keypress\", function (e) {\n      if (e.key === \"Enter\") {\n        $(\"#btn-submit\").trigger(\"click\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main className=\"mt-5\">\n          <div\n            className=\"align-content-center my-auto mt-auto h-100\"\n            style={{ verticalAlign: \"middle\" }}\n          >\n            <div className=\"col\">\n              <img\n                className=\" app-logo img-fluid\"\n                src=\"app_icon.png\"\n                alt=\"Music Search\"\n              ></img>\n              <div>\n                <span className=\"h1 app-name\">Music Search</span>\n              </div>\n              <div className=\"container center\">\n                <div className=\"input-group input-group-lg mt-4\">\n                  <input\n                    id=\"search-input\"\n                    type=\"text\"\n                    className=\"form-control input-red\"\n                    placeholder=\"Search Here\"\n                  ></input>\n                </div>\n                <div className=\"row justify-content-center\">\n                  <div className=\"pl-2 pr-2\">\n                    <button\n                      id=\"btn-submit\"\n                      type=\"submit\"\n                      className=\"btn search-button text-white\"\n                      onClick={this.handleSubmit}\n                    >\n                      Search\n                    </button>\n                  </div>\n                  <div className=\"pl-2 pr-2\">\n                    <button\n                      id=\"btn-dark-mode\"\n                      className=\"btn btn-light dark-mode-button\"\n                      onClick={this.toggleDarkMode}\n                    >\n                      Dark Mode\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.show_result ? (\n            <Result query={this.state.search_query} key={Math.random()} />\n          ) : null}\n        </main>\n        <footer className=\"page-footer m-5\">\n          <div className=\"social-icons\">\n            <div className=\"row justify-content-center\">\n              <div className=\"m-2\">\n                <a\n                  href=\"https://github.com/Torrent-Search/music-search-web\"\n                  className=\"social-custom-link\"\n                >\n                  <i class=\"devicon-github-original social-icons\"></i>\n                </a>\n              </div>\n              <div className=\"m-2\">\n                <a\n                  href=\"mailto:tejasvp25@gmail.com\"\n                  className=\"social-custom-link\"\n                >\n                  <i class=\"devicon-google-plain social-icons\"></i>\n                </a>\n              </div>\n            </div>\n            <div className=\"row justify-content-center\">\n              <i\n                class=\"devicon-react-original-wordmark colored\"\n                style={{ fontSize: \"35px\" }}\n              ></i>\n              <h5 className=\"ml-2\">Made with React</h5>\n            </div>\n          </div>\n          <div className=\"row justify-content-center text-center pt-1\">\n            <span className=\"text-secondary\">\n              Tejasvp25 © 2020 · Made with{\" \"}\n              <span role=\"img\">\n                <img\n                  src=\"https://madewithlove.org.in/favicon-16x16.png?v=ngkxyOrw9y\"\n                  alt=\"love\"\n                />\n                &nbsp;\n              </span>\n              in India\n            </span>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n\n  // render() {\n  //   return <Result />;\n  // }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}